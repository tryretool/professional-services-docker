# From docker-compose-3-full-stack-w-workflows
services:
  api:
    build: &build_retool
      context: ./
      dockerfile: Dockerfile
      args: &build_retool_default_args
        IMAGE_REPO: tryretool
        RETOOL_VERSION: 3.114.1-stable
        RETOOL_IMAGE: backend
        START_CMD: ./docker_scripts/start_api.sh
        
    env_file: &env_file ./docker.env
    
    environment:
      - SERVICE_TYPE=MAIN_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
    networks:
      - frontend-network
      - backend-network
      - code-executor-network
    depends_on:
      - jobs-runner
      - workflows-worker
      - code-executor
    command: bash -c "./docker_scripts/start_api.sh"
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - ./keys:/root/.ssh
      - ./keys:/retool_backend/keys
      - ssh:/retool_backend/autogen_ssh_keys
      - ./retool:/usr/local/retool-git-repo
      - ${BOOTSTRAP_SOURCE:-./retool}:/usr/local/retool-repo

  jobs-runner:
    build: *build_retool
    env_file: *env_file

    environment:
      - SERVICE_TYPE=JOBS_RUNNER
    networks:
      - backend-network
    command: bash -c "chmod -R +x ./docker_scripts; sync; ./docker_scripts/start_api.sh"
    volumes:
      - ./keys:/root/.ssh

  workflows-worker:
    build: *build_retool
    env_file: *env_file
      
    command: bash -c "./docker_scripts/start_api.sh"

    environment:
      - SERVICE_TYPE=WORKFLOW_TEMPORAL_WORKER
      - NODE_OPTIONS=--max_old_space_size=1024
      # - DISABLE_DATABASE_MIGRATIONS=true
     
    networks:
      - backend-network
      - code-executor-network
    restart: on-failure

  workflows-backend:
    build: *build_retool
    env_file: *env_file
    
    environment:
      - SERVICE_TYPE=WORKFLOW_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
    networks:
      - backend-network
      - code-executor-network
    depends_on:
      - workflows-worker
      - code-executor
    command: bash -c "./docker_scripts/start_api.sh"
    restart: on-failure
    volumes:
      - ./keys:/root/.ssh
      - ./keys:/retool_backend/keys
      - ssh:/retool_backend/autogen_ssh_keys
      - ./retool:/usr/local/retool-git-repo
      - ${BOOTSTRAP_SOURCE:-./retool}:/usr/local/retool-repo

  code-executor:
    build:
      <<: *build_retool
      args:
        <<: *build_retool_default_args
        RETOOL_IMAGE: code-executor-service
        START_CMD: "bash start.sh"

    env_file: *env_file
    
    command: bash -c "./start.sh"
    environment:
      - NODE_OPTIONS=--max_old_space_size=1024
    networks:
      - code-executor-network
    # code-executor uses nsjail to sandbox code execution. nsjail requires
    # privileged container access.
    # If your deployment does not support privileged access, you can set this
    # to false to not use nsjail. Without nsjail, all code is run without
    # sandboxing within your deployment.
    privileged: true
    restart: on-failure

networks:
  frontend-network:
  backend-network:
  code-executor-network:

volumes:
  ssh:
  data:
