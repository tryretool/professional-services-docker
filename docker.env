# License key ===========================================
### From https://my.retool.com/ssop_users/sign_up
LICENSE_KEY=TODO-LICENSE-KEY-TRIAL
### if: airgapped, replace above with:
# OFFLINE_LICENSE_KEY=TODO-ENCRYPTED_AIRGAPPED_KEY
# ^ and update docker-compose.yml build definition

# Encryption  ===========================================
# Recommended Command: $ openssl rand -base64 32

### This key value should be stored securely (~1Password), and should not be changed over the lifetime of the deployment
### - without this key your data is lost (~if not managed via IdP + Source Control)
ENCRYPTION_KEY=TODO/random-string

### Set the JWT secret for the API server - can be rotated anytime
JWT_SECRET=TODO/random-string

# Setup "retool-platform-db" (PSQL)   ===========================================
## common vars - usually left as is
POSTGRES_DB=hammerhead_production
POSTGRES_PORT=5432

#### Fill in your desired service-user-account
POSTGRES_USER=TODO-your-username-here # must be superuser
POSTGRES_PASSWORD=TODO-your-password-here


POSTGRES_HOST=postgres # For testing, start w/ docker managed postgres in your docker-compose.yml
# POSTGRES_HOST=TODO.url.for.your.instance # precreated/managed/3rd party Postgres database, require a retool specific instance. test with psql.


## Step: Enable HTTPS w/ nginx
# Solve your networking layer with a public ip on your instance, or load balancer connecting to it
# Mapping {dns}:80 to {api-services}:3000
# when you have your ssl certificate setup, comment out this cookie value
COOKIE_INSECURE=true # allow http traffic


# ==============================================================
# Globals (to simplify docker-compose.yml) and Other Stuff - if and as needed ===============================
# ==============================================================

# Set node environment to production
NODE_ENV=production
# DEBUG=1 # 0 is Off/default. Uncomment for verbose logs.

## If you need Google SSO
# CLIENT_ID={GOOGLE CLIENT ID}
# CLIENT_SECRET={GOOGLE CLIENT SECRET}

# Used by all Services in docker-compose.yml
DEPLOYMENT_TEMPLATE_TYPE=docker-compose

# Simplify docker-compose with these globals
# Needed By API + Workflows Backend
WORKFLOW_BACKEND_HOST=http://workflows-backend:3000
CODE_EXECUTOR_INGRESS_DOMAIN=http://code-executor:3004
DBCONNECTOR_POSTGRES_POOL_MAX_SIZE=100
DBCONNECTOR_QUERY_TIMEOUT_MS=120000 
